@using Microsoft.AspNetCore.Identity
@using Poced.Identity.Shared
@model Poced.Web.Models.LoginModel
@inject SignInManager<PocedUser> SignInManager

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <section class="login-section">
            <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                <h4>Use a local account to log in.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="RememberMe">
                            <input asp-for="RememberMe" />
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-default">Log in</button>
                </div>
                <div class="form-group">
                    <p>
                        <a asp-action="ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Register as a new user?</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}


    

@*<div class="page-header">
    <h1>Login</h1>
</div>



@using(Html.BeginForm())
{
    @Html.ValidationSummary(true)
    
    <fieldset class="col-sm-6">
        <div class="form-group">
            @Html.LabelFor(x => x.Email)
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "label label-danger pull-right" })
            @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Password)
            @Html.ValidationMessageFor(x => x.Password, null, new { @class = "label label-danger pull-right" })
            @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <button class="btn btn-default">Login</button>
        </div>
    </fieldset>
}*@

@*<div class="col-sm-4 col-sm-offset-1">
    <div class="panel panel-default">
        <div class="panel-heading">Login With External Provider</div>
        <ul class="list-group">
            <li class="list-group-item">
                <a class="btn btn-block btn-default" href="/LoginExternal?provider=Google&returnUrl=@Request.QueryString["ReturnUrl"]">
                    <img src="~/Content/google.png">
                    Google
                </a>
            </li>
        </ul>
    </div>
</div>*@