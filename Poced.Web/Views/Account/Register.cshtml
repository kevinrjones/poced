@model Poced.Web.Models.RegisterModel

@{
    ViewData["Title"] = "Registration";
}

<div class="page-header">
    <h1>Registration</h1>
</div>

<div class="row">
    <div class="col-md-4"></div>
    <div class="col-md-4">
        <section class="login-section">
            <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
                <h4>Create a new account.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" class="form-control" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" class="form-control" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-default">Register</button>
            </form>
        </section>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}


@*@using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        <fieldset class="col-sm-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Email)
                @Html.ValidationMessageFor(x => x.Email, null, new { @class = "label label-danger pull-right" })
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Password)
                @Html.ValidationMessageFor(x => x.Password, null, new { @class = "label label-danger pull-right" })
                @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ConfirmPassword, "Confirm Password")
                @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "label label-danger pull-right" })
                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <button class="btn btn-primary">Register</button>
            </div>
        </fieldset>
    }*@
